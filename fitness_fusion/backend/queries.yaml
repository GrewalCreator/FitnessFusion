sql:
    addMember: >
                INSERT INTO Members (FirstName, LastName, Email, Password, DOB, Gender, MemberType)
                VALUES (LOWER(%s), LOWER(%s), LOWER(%s), %s, %s, %s, %s) 
                ON CONFLICT (Email) 
                DO NOTHING RETURNING MemberID;

    addClient: INSERT INTO Clients (MemberID) VALUES (%s) ON CONFLICT (MemberID) DO NOTHING;

    searchMembersByEmail: SELECT 1 FROM Members WHERE Email = %s;

    searchTrainersByEmail: SELECT 1 FROM Members WHERE Email = %s AND MemberType = 'Trainer';

    searchStaffByEmail: SELECT 1 FROM Members WHERE Email = %s AND (MemberType = 'Trainer' OR MemberType = 'Admin-Staff');

    searchClientsByEmail:  >
                            SELECT 1
                            FROM (
                                SELECT m.FirstName, m.LastName, m.Email, m.Gender
                                FROM Members m
                                JOIN Clients c ON m.MemberID = c.MemberID
                            ) AS subquery
                            WHERE Email = %s

    getMemberPasswordByEmail: SELECT Password FROM Members WHERE Email = %s

    searchMembersByName: >
                SELECT FirstName, LastName, Email, Gender FROM Members WHERE FirstName LIKE %s OR LastName LIKE %s
    
    searchTrainersByName: >
                SELECT FirstName, LastName, Email, Gender FROM Members WHERE MemberType = 'Trainer' AND (FirstName LIKE %s OR LastName LIKE %s)

    getAllTrainerSessions: >
                SELECT StartTime, Duration_Minutes, SessionType, isBooked
                FROM WorkoutSessions
                WHERE MemberID = (
                    SELECT MemberID
                    FROM Members
                    WHERE Email = %s
                )

    searchClientsByName: >
                SELECT FirstName, LastName, Email, Gender
                FROM (
                    SELECT m.FirstName, m.LastName, m.Email, m.Gender
                    FROM Members m
                    JOIN Clients c ON m.MemberID = c.MemberID
                ) AS subquery
                WHERE FirstName LIKE %s OR LastName LIKE %s;


    updateEmail: UPDATE Members SET Email = %s WHERE Email = %s;

    getAllMembers: >
                SELECT FirstName, LastName, Email, MemberType 
                FROM Members;

    updatePassword: UPDATE Members SET Password = %s WHERE Email = %s;

    getMemberType: SELECT MemberType FROM Members WHERE Email = %s;

    getAllClients: >
                SELECT m.FirstName, m.LastName, m.Email, m.Gender
                FROM Members m
                JOIN Clients c ON m.MemberID = c.MemberID;

    getAllTrainers: >
                SELECT FirstName, LastName, Email, Gender
                FROM Members
                WHERE MemberType = 'Trainer';

    getAllClientBalance: >
                SELECT m.FirstName, m.LastName, m.Email, c.AccountBalance
                FROM Members m
                JOIN Clients c ON m.MemberID = c.MemberID;

    getClientBalanceByName: >
                
                SELECT FirstName, LastName, Email, AccountBalance
                FROM (
                    SELECT m.FirstName, m.LastName, m.Email, c.AccountBalance
                    FROM Members m
                    JOIN Clients c ON m.MemberID = c.MemberID
                ) AS subquery
                WHERE FirstName LIKE %s OR LastName LIKE %s;


    getClientBalanceByEmail: >
                SELECT c.AccountBalance
                FROM Members m
                JOIN Clients c ON m.MemberID = c.MemberID
                WHERE m.Email = %s;

    chargeAllClients: >
                UPDATE Clients
                SET AccountBalance = AccountBalance + 50;

    payAccountBalance: >
                UPDATE Clients 
                SET AccountBalance = AccountBalance - %s 
                WHERE MemberID = (
                    SELECT MemberID 
                    FROM Members 
                    WHERE Email = %s
                );

    deleteMember: DELETE FROM Members WHERE Email = %s;


    addSession: >
                BEGIN;

                WITH trainer AS (
                    SELECT MemberID
                    FROM Members
                    WHERE Email = %s
                )
                INSERT INTO WorkoutSessions (MemberID, StartTime, Duration_Minutes, isBooked, SessionType, RoomNumber)
                SELECT MemberID, %s, %s, FALSE, %s, %s
                FROM trainer;

                

                COMMIT;

    checkTrainerAvailability: >
            SELECT NOT EXISTS (
                SELECT 1
                FROM WorkoutSessions
                WHERE MemberID = (
                    SELECT MemberID
                    FROM Members
                    WHERE Email = %s
                )
                AND NOT (
                    (StartTime + (Duration_Minutes * interval '1 minute')) <= %s
                    OR
                    StartTime >= (%s + (%s * interval '1 minute'))
                )
            ) AS is_available;



    checkRoomAvailability: >
            SELECT NOT EXISTS (
                SELECT 1
                FROM WorkoutSessions
                WHERE RoomNumber = %s
                AND NOT (
                    (StartTime + (Duration_Minutes * interval '1 minute')) <= %s
                    OR
                    StartTime >= (%s + (%s * interval '1 minute'))
                )
            ) AS is_available;




    addGoal: >
            WITH ClientInfo AS (
                SELECT MemberID
                FROM Members
                WHERE Email = %s
            )
            INSERT INTO Goals (MemberID, GoalType, GoalTarget)
            SELECT MemberID, %s, %s 
            FROM ClientInfo;

    completeGoal: >
            UPDATE Goals
            SET isCompleted = TRUE
            WHERE MemberID = (
                SELECT MemberID
                FROM Members
                WHERE Email = %s
            ) AND GoalType = %s AND GoalTarget = %s AND DateCreated = %s;


    searchClientsGoalByEmail: >
                SELECT GoalType, GoalTarget, DateCreated
                FROM Goals g
                JOIN Members m ON g.MemberID = m.MemberID
                JOIN Clients c ON m.MemberID = c.MemberID
                WHERE m.Email = %s AND g.isCompleted = %s;


    deleteGoal: >
            DELETE FROM Goals
            WHERE MemberID = (
                SELECT MemberID
                FROM Members
                WHERE Email = %s
            ) AND GoalType = %s AND GoalTarget = %s AND DateCreated = %s AND isCompleted = %s;
    

    getAchievements: >
            SELECT
                MAX(CASE WHEN g.GoalType = 'deadlift' THEN g.GoalTarget END) AS max_deadlift,
                MAX(CASE WHEN g.GoalType = 'squat' THEN g.GoalTarget END) AS max_squat,
                MAX(CASE WHEN g.GoalType = 'benchpress' THEN g.GoalTarget END) AS max_benchpress
            FROM
                Goals g
            JOIN
                Members m ON g.MemberID = m.MemberID
            JOIN
                Clients c ON m.MemberID = c.MemberID
            WHERE
                m.Email = %s AND
                g.isCompleted = TRUE;

    getAllRooms: >
            SELECT RoomNumber FROM Rooms;
    
    
    getSessionID: >
            SELECT
                SessionID
            FROM
                WorkoutSessions
            WHERE
                SessionID = %s;

    getMemberID: >
            SELECT
                MemberID
            FROM
                Members
            WHERE
                Email = %s;

    bookSession: >
            BEGIN;

                UPDATE
                    WorkoutSessions
                SET
                    isBooked = TRUE,
                    Participants = Participants + 1
                WHERE
                    SessionID = %s
                    AND isBooked = FALSE
                    AND (SessionType = 'private' OR (SessionType = 'group' AND Participants < 3));

                UPDATE
                    Clients
                SET
                    SessionIDs = array_append(SessionIDs, %s)
                WHERE
                    MemberID = %s
                    AND NOT %s = ANY (SELECT unnest(SessionIDs) FROM Clients WHERE MemberID = %s);


            COMMIT;

    getAllSessions: >
            SELECT
                ws.SessionID,
                CONCAT(m.FirstName, ' ', m.LastName) AS FullName,
                ws.StartTime,
                ws.Duration_Minutes,
                ws.RoomNumber,
                ws.Participants
            FROM
                WorkoutSessions ws
            INNER JOIN
                Members m ON ws.MemberID = m.MemberID
            LEFT JOIN
                Clients c ON ws.SessionID = ANY(c.SessionIDs)
            WHERE
                ws.SessionType = %s
                AND ws.isBooked = FALSE
                AND NOT ws.SessionID = ANY (SELECT unnest(SessionIDs) FROM Clients WHERE MemberID = %s);


    getEquipment: SELECT EquipmentID, EquipmentName, isAvailable FROM Equipment;

    toggleEquipment: >
                UPDATE Equipment
                SET isAvailable = %s
                WHERE EquipmentID = %s;